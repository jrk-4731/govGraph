{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/jrk99/govGraph/src/components/map.jsx\";\nimport React, { Component } from \"react\";\nimport { getButtons } from \"./fetch_data_functions\";\nimport Dropdown from \"./dropDown\";\nimport \"./map.css\";\nimport MyMap from \"./usa.jpg\";\n\nclass MapDisplay extends Component {\n  constructor() {\n    super();\n\n    this.getAll = () => {\n      getButtons(116).then(data => {\n        this.setState({\n          buttons: [...data],\n          btn_tracker: new Map()\n        });\n      });\n    };\n\n    this.componentWillReceiveProps = props => {\n      console.log(props.congress);\n      getButtons(props.congress).then(data => {\n        this.setState({\n          buttons: [...data],\n          btn_tracker: new Map()\n        });\n      });\n    };\n\n    this.getTheState = (abbrev, idx) => {\n      var val = this.state.btn_tracker.get(abbrev);\n      var name = this.state.buttons[idx][0];\n      var bioGuide = this.state.buttons[idx][1];\n      var party = this.state.buttons[idx][3];\n\n      if (party !== \"Republican\" && party !== \"Democrat\") {\n        party = \"Other\";\n      }\n\n      if (val === undefined) {\n        this.state.btn_tracker.set(abbrev, 1);\n        return React.createElement(\"div\", {\n          onClick: () => this.props.setCurrentMember(name, bioGuide),\n          key: idx,\n          className: party + \" \" + abbrev + \"-1 btn \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"tooltiptext\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, name.first + \" \" + name.last));\n      } else {\n        return React.createElement(\"div\", {\n          onClick: () => this.props.setCurrentMember(name, bioGuide),\n          key: idx,\n          className: party + \" \" + abbrev + \"-2 btn \",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          className: \"tooltiptext\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, name.first + \" \" + name.last));\n      }\n    };\n\n    this.setCongress = newCongress => {\n      this.props.setCongress(newCongress);\n    };\n\n    this.state = {\n      buttons: [],\n      btn_tracker: null,\n      currentMember: null,\n      clicked: false\n    };\n  }\n\n  componentWillMount() {\n    this.getAll();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"imgContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"mapImg\",\n      src: MyMap,\n      alt: \"Where is my map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"h3\", {\n      className: \"dropDownName\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Congress\"), React.createElement(\"div\", {\n      className: \"congressDropDown\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Dropdown, {\n      setCongress: this.setCongress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), Object.keys(this.state.buttons).map(idx => {\n      var val = this.state.buttons[idx][2];\n      return this.getTheState(val, idx);\n    }));\n  }\n\n}\n\nexport default MapDisplay;","map":{"version":3,"sources":["/mnt/c/Users/jrk99/govGraph/src/components/map.jsx"],"names":["React","Component","getButtons","Dropdown","MyMap","MapDisplay","constructor","getAll","then","data","setState","buttons","btn_tracker","Map","componentWillReceiveProps","props","console","log","congress","getTheState","abbrev","idx","val","state","get","name","bioGuide","party","undefined","set","setCurrentMember","first","last","setCongress","newCongress","currentMember","clicked","componentWillMount","render","Object","keys","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { getButtons } from \"./fetch_data_functions\";\r\nimport Dropdown from \"./dropDown\";\r\nimport \"./map.css\";\r\nimport MyMap from \"./usa.jpg\";\r\n\r\nclass MapDisplay extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      buttons: [],\r\n      btn_tracker: null,\r\n      currentMember: null,\r\n      clicked: false\r\n    };\r\n  }\r\n  componentWillMount() {\r\n    this.getAll();\r\n  }\r\n\r\n  getAll = () => {\r\n    getButtons(116).then(data => {\r\n      this.setState({\r\n        buttons: [...data],\r\n        btn_tracker: new Map()\r\n      });\r\n    });\r\n  };\r\n\r\n  componentWillReceiveProps = props => {\r\n    console.log(props.congress);\r\n    getButtons(props.congress).then(data => {\r\n      this.setState({\r\n        buttons: [...data],\r\n        btn_tracker: new Map()\r\n      });\r\n    });\r\n  };\r\n\r\n  getTheState = (abbrev, idx) => {\r\n    var val = this.state.btn_tracker.get(abbrev);\r\n    var name = this.state.buttons[idx][0];\r\n    var bioGuide = this.state.buttons[idx][1];\r\n    var party = this.state.buttons[idx][3];\r\n    if (party !== \"Republican\" && party !== \"Democrat\") {\r\n      party = \"Other\";\r\n    }\r\n    if (val === undefined) {\r\n      this.state.btn_tracker.set(abbrev, 1);\r\n      return (\r\n        <div\r\n          onClick={() => this.props.setCurrentMember(name, bioGuide)}\r\n          key={idx}\r\n          className={party + \" \" + abbrev + \"-1 btn \"}\r\n        >\r\n          <span className=\"tooltiptext\">{name.first + \" \" + name.last}</span>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div\r\n          onClick={() => this.props.setCurrentMember(name, bioGuide)}\r\n          key={idx}\r\n          className={party + \" \" + abbrev + \"-2 btn \"}\r\n        >\r\n          <span className=\"tooltiptext\">{name.first + \" \" + name.last}</span>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  setCongress = newCongress => {\r\n    this.props.setCongress(newCongress);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"imgContainer\">\r\n        <img className=\"mapImg\" src={MyMap} alt=\"Where is my map\" />\r\n        <h3 className=\"dropDownName\">Congress</h3>\r\n        <div className=\"congressDropDown\">\r\n          <Dropdown setCongress={this.setCongress} />\r\n        </div>\r\n        {Object.keys(this.state.buttons).map(idx => {\r\n          var val = this.state.buttons[idx][2];\r\n          return this.getTheState(val, idx);\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapDisplay;\r\n"]},"metadata":{},"sourceType":"module"}